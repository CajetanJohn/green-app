{"version":3,"file":"static/js/309.a0ba10f3.chunk.js","mappings":"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","sources":["materials/input.js","pages/authentication/Login.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Icon from '../assets/icons/icon';\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPassword: false,\n      value: this.props.value // State to store input value\n    };\n  }\n\n  // Update the state when the value prop changes\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.setState({ value: this.props.value });\n    }\n  }\n\n  togglePasswordVisibility = () => {\n    this.setState(prevState => ({\n      showPassword: !prevState.showPassword\n    }));\n  };\n\n  handleInputChange = (e) => {\n    const { value } = e.target;\n    this.setState({ value });\n\n    // Call the callback function passed from the parent component\n    if (this.props.onChange) {\n      this.props.onChange(this.props.name, value);\n    }\n  };\n\n  render() {\n    // Accessing props passed down from the parent component\n    const { id, labelText, type, required, error, ...rest } = this.props;\n    const { showPassword } = this.state;\n\n    // Determine if error is an array or a string\n    const errorMessages = Array.isArray(error) ? error : [error];\n\n    return (\n      <>\n        <div className=\"input-field\">\n          <input\n            className={`input ${error ? 'invalid' : 'valid'}`} // Apply invalid class if there is an error\n            type={type === 'password' && showPassword ? 'text' : type}\n            id={id}\n            {...rest}\n            required={required}\n            value={this.state.value}\n            onChange={this.handleInputChange}\n          />\n          {type === 'password' && (showPassword ?\n            (<div className='icon-container'><Icon name=\"hide\" onClick={this.togglePasswordVisibility} style={{ position: 'absolute', top: '50%', right: '0', transform: 'translate(100%, -50%)' }} /></div>)\n            : (<div className='icon-container'><Icon name=\"show\" onClick={this.togglePasswordVisibility} style={{ position: 'absolute', top: '50%', right: '0', transform: 'translate(100%, -50%)' }}/></div>)\n          )}\n          <label htmlFor={id}>{labelText}</label>\n          <style>\n          {`\n            .input-field {\n              position: relative;\n              width: 100%;\n              min-height: 44px;\n              height:fit-content;\n              line-height: 44px;\n              margin-top: 20px;\n              background:none;\n              border:2px solid black;\n              border-radius:25px;\n              background:white;\n            }\n            .input-field label {\n              position: absolute;\n              top: 50%;\n              transform:translateY(-50%);\n              left: 10px;\n              width: fit-content;\n              color: var(--txtc);\n              transition: 0.2s all;\n              cursor: text;\n              pointer-events:none;\n              font-size:1rem;\n              background:white;\n              height:fit-content;\n              line-height:1;\n            }\n            .input-field .input {\n              width: calc(100% - 1rem);\n              border: 0;\n              outline: 0;\n              padding: 0.5rem;\n              border-bottom: 2px solid var(--txtc);\n              box-shadow: none;\n              color: var(--txtc);\n              background:none;\n              font-size: 0.8rem;\n              background-color:none;\n              box-shadow:transparent;\n            }\n            .input-field .input.invalid {\n              outline: 0;\n              color: var(--invalid-txtc);\n              border-color: var(--invalid-txtc);\n            }\n            .input-field .input:focus,\n            .input-field .input.valid {\n              border-color: var(--txtc);\n            }\n\n            .input-field .input:focus ~ label{\n              top: 0;\n            }\n\n            .input-field .input:focus.valid ~ label,\n            .input-field .input:valid ~ label {\n              font-size: 1rem;\n              top: 0;\n              color: var(--txtc);\n            }\n\n            .input-field .input.invalid ~ span{\n              display:none;\n              margin:0;\n              line-height:normal;\n            }\n\n            .input-field .input:focus.invalid ~ span {\n              color:var(--invalid-txtc);\n              display:block;\n            }\n            .input-field .input:focus.invalid ~ label {\n              color: var(--invalid-txtc);\n            }\n            .input-field .icon-container{\n              position:absolute;\n              bottom:50%;\n              right: 30px;\n              z-index:1;\n              height:100%;\n              padding:0 5px;\n              transform:translateY(50%);\n            }\n            .input-field .error{\n              color: var(--invalid-txtc);\n              font-size:0.6rem;\n            }\n            .input-field .feedBack{\n              color:var()\n            }\n          `}\n        </style>\n        </div>\n        {errorMessages.map((errorMessage, index) => (\n          <span key={index} className=\"error\">{errorMessage}</span>\n        ))}\n      </>\n    );\n  }\n}\n\n\nexport default Input;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../assets/styles/login.css';\nimport PrimaryButton from '../../materials/pr-btn';\nimport Input from '../../materials/input';\nimport { Link } from 'react-router-dom'; \n\nconst SignInPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const authenticateUser = (e) => {\n    e.preventDefault();\n    // Here, you can handle user authentication logic\n    navigate('/main');\n  };\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"welcome-message\">\n        <div className=\"greebin-trademark\">\n            <span className=\"welcome-to\">Welcome to</span>\n            <h1 className=\"greenbin\">GreenBin</h1>\n        </div>\n        <div className=\"suggestive-message\">\n            <span>Welcome again! Please log in</span>\n        </div>\n      </div>\n\n      <div className='image-wrapper'>\n        <img src={require('../../assets/images/login-img.png')} alt=\"Login Image\" />\n      </div>\n\n      <div className='form'>\n        <form className='sign-in-form' noValidate onSubmit={authenticateUser}>\n          <Input \n            type='text' \n            id=\"username\" \n            name=\"username\" \n            labelText=\"Username\" \n            required={true} \n            value={username} \n            onChange={(name, value) => setUsername(value)} \n          />\n          <Input \n            type='password' \n            id=\"password\" \n            name=\"password\" \n            labelText=\"Password\" \n            required={true} \n            value={password} \n            onChange={(name, value) => setPassword(value)} \n          />\n          <div className='forgot-password-div'></div>\n          <div className=\"login-button\">\n            <PrimaryButton type=\"submit\">Login</PrimaryButton>\n          </div>\n        </form>\n\n        <div className='sign-navigation-btn'>\n          Don't have an account? <Link to=\"/register\">Register</Link>\n        </div>             \n      </div>\n    </div>\n  );\n};\n\nexport default SignInPage;\n"],"names":["Input","React","constructor","props","super","togglePasswordVisibility","this","setState","prevState","showPassword","handleInputChange","e","value","target","onChange","name","state","componentDidUpdate","prevProps","render","id","labelText","type","required","error","rest","errorMessages","Array","isArray","_jsxs","_Fragment","children","className","_jsx","concat","Icon","onClick","style","position","top","right","transform","htmlFor","map","errorMessage","index","SignInPage","username","setUsername","useState","password","setPassword","navigate","useNavigate","src","require","alt","noValidate","onSubmit","preventDefault","PrimaryButton","Link","to"],"sourceRoot":""}